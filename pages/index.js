import { useState } from "react";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Pagination from "../components/Pagination";
import Link from "next/link";
import { useRouter } from "next/router";
import ReactPaginate from "react-paginate";
export default function Home({ data }) {
  console.log("data is", data);
  const [blog, setBlog] = useState(data);
  const [postPerage, setPostperpage] = useState(4);
  const [currentpage, setCurrentpage] = useState(0);
  const [searchPost, setSearchPost] = useState("");

  const indexoffLastPost = currentpage * postPerage;
  const indexofFirstPost = postPerage + indexoffLastPost;
  const currentPost = blog.slice(indexoffLastPost, indexofFirstPost);
  const hanldePage = (blog_) => {
    setBlog(blog_);
  };
  const router = useRouter();
  const pageCount = Math.ceil(blog.length / postPerage);
  const changePage = ({ selected }) => {
    setCurrentpage(selected);
  };
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <section className='text-gray-600 body-font'>
        <form>
          <label
            for='default-search'
            class='mb-2 text-sm font-medium text-gray-900 sr-only dark:text-gray-300'
          >
            Search
          </label>
          <div class='relative'>
            <div class='flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none'>
              <svg
                class='w-5 h-5 text-gray-500 dark:text-gray-400'
                fill='none'
                stroke='currentColor'
                viewBox='0 0 24 24'
                xmlns='http://www.w3.org/2000/svg'
              >
                <path
                  stroke-linecap='round'
                  stroke-linejoin='round'
                  stroke-width='2'
                  d='M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z'
                ></path>
              </svg>
            </div>
            <input
              type='search'
              id='default-search'
              class='block p-4 pl-10 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500'
              placeholder='Search Mockups, Logos...'
              onChange={(even) => {
                setSearchPost(even.target.value);
              }}
            />
            <button
              type='submit'
              class='text-white absolute right-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800'
            >
              Search
            </button>
          </div>
        </form>
        <div className='container px-5 py-20 mx-auto'>
          <div className='flex flex-wrap -m-4'>
            {currentPost
              .filter((post) => {
                if (searchPost == "") {
                  return post;
                } else if (
                  post.title.rendered
                    .toLowerCase()
                    .includes(searchPost.toLowerCase())
                ) {
                  return post;
                }
              })
              .map((post, index) => {
                return (
                  <Link href={`/routes/${post["slug"]}`} key={index}>
                    <div className='xl:w-1/3 md:w-1/2 p-4'>
                      <div className='bg-gray-100 p-6 rounded-lg'>
                        <img
                          alt='content'
                          className='object-cover object-center h-full w-full'
                          src={
                            post["_embedded"]["wp:featuredmedia"][0][
                              "source_url"
                            ]
                          }
                        />
                        <h2 className='text-lg text-gray-900 font-medium title-font mb-4'>
                          {post["title"]["rendered"]}
                        </h2>
                        <div
                          dangerouslySetInnerHTML={{
                            __html: post["excerpt"]["rendered"],
                          }}
                          className='leading-relaxed text-base'
                        ></div>
                      </div>
                    </div>
                  </Link>
                );
              })}
            <div>
              {searchPost && blog?.length === 0 && (
                <div>
                  <h1>No data is available</h1>
                </div>
              )}
            </div>
          </div>
          <br />
          <br />
          <br />
          {/* <Pagination postPerage={postPerage} totalPost={blog.length} /> */}
          <ReactPaginate
            previousLabel={"Prev"}
            nextLabel={"Next"}
            pageCount={pageCount}
            onPageChange={changePage}
            containerClassName='pagination'
            pageClassName='page-num'
            previousLinkClassName='page-num'
            nextLinkClassName='page-num'
            disabledClassName={"paginationDisabled"}
            activeLinkClassName='active'
          />
        </div>
      </section>
    </div>
  );
}

export async function getServerSideProps() {
  const getPosts = await fetch("http://blogs.local/wp-json/wp/v2/posts?_embed");
  const data = await getPosts.json();
  return { props: { data } };
}
